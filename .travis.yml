addons:
    apt:
        sources:
            - llvm-toolchain-precise
            - ubuntu-toolchain-r-test
        packages:
            - clang-3.7
            - g++-5
            - gcc-5

sudo: false

language: cpp

matrix:
  include:
    - env: ARCH="x86_64"
      os: linux
    - env: ARCH="x86_64"
      os: osx

# Use miniconda to install binary versions of numpy etc. from continuum
# analytic's repository. Follows an approach described by Dan Blanchard:
# https://gist.github.com/dan-blanchard/7045057
before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-$ARCH.sh -O miniconda.sh;
    else
      wget http://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-$ARCH.sh -O miniconda.sh;
    fi;
  - chmod +x miniconda.sh
  # When we are installing the 32 Bit conda on a 64 Bit system, the miniconda
  # installer will ask for a "yes" despite the -b flag, so we pipe in a yes
  - yes | ./miniconda.sh -b -p $HOME/miniconda
  #- bash miniconda.sh -b -p -f $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$HOME/miniconda/lib:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # Add dlr-sc channel for third part libraries
  # necessary because of gl2ps
  - conda config --add channels https://conda.anaconda.org/conda-forge
  - conda config --add channels https://conda.anaconda.org/dlr-sc
  - conda config --add channels https://conda.anaconda.org/oce
  # install everything required to build the receipe
  - conda install conda-build anaconda-client
  
install:
    - if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
    - if [ "$CXX" = "clang++" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi

script:
  - conda build ci/conda

branches:
  only:
    - master
